import logo from './logo.svg';
import './App.css';
import MenuItem from './components/MenuItem';
import Header from './components/Header';

import { BrowserRouter,  Routes, Route, Link } from 'react-router-dom';


const namesMeat = [
  "Говяжья вырезка", "Куриные грудки", "Свиные ребра", "Фарш говяжий", 
  "Баранина на кости", "Говяжий стейк Рибай", "Куриные ножки", "Свиное филе", 
  "Говяжий язык", "Куриные крылья", "Утка", "Индюшиное филе", 
  "Куриный фарш", "Свиные стейки", "Говяжий гуляш", "Курица целая", 
  "Печень говяжья", "Говяжий хвост", "Свиные отбивные", "Бекон нарезной"
];
const descriptionsMeat = [
  "Сочная и нежная говядина высшего качества для стейков или запекания.",
  "Диетическое мясо с низким содержанием жира, идеально для фитнес-блюд.",
  "Подойдут для запекания или приготовления барбекю.",
  "Подходит для котлет, пельменей или тефтелей.",
  "Насыщенный вкус для приготовления бульонов и плова.",
  "Высококачественное мясо для гриля.",
  "Универсальный продукт для жарки, запекания или тушения.",
  "Нежное мясо для запекания и жарки.",
  "Подходит для варки и добавления в салаты.",
  "Идеально для маринада и гриля.",
  "Отличный выбор для праздничного стола.",
  "Нежное мясо с низким содержанием жира.",
  "Для котлет, запеканок и соусов.",
  "Для жарки или запекания.",
  "Уже порезанное мясо для тушения.",
  "Универсальный продукт для запекания или бульона.",
  "Богата витаминами, подходит для паштетов или жарки.",
  "Идеально для супов.",
  "Для жарки или гриля.",
  "Для завтраков или закусок."
];
const pricesMeat = [
  5400, 2300, 4800, 4100, 6500, 8500, 2100, 5200, 6000, 1900, 
  7900, 4500, 2200, 5400, 4700, 4000, 2700, 3000, 5100, 3000
];
const weightsMeat = [
  "1 кг", "1 кг", "1 кг", "1 кг", "1 кг", "1 кг", "1 кг", "1 кг", 
  "1 кг", "1 кг", "1.5 кг", "1 кг", "1 кг", "1 кг", "1 кг", "2 кг", 
  "1 кг", "1 кг", "1 кг", "500 г"
];

const nameBread = [
  "Пшеничный хлеб", 
  "Ржаной хлеб",   "Багет французский",   "Булочки для бургеров", 
  "Лаваш армянский",   "Хлеб цельнозерновой", 
  "Пицца-сетка",   "Круассаны с шоколадом",   "Печенье овсяное",   "Маффины с черникой"
];

const descriptionsBread = [
  "Хрустящий и мягкий внутри.",
  "Богат клетчаткой и витаминами.",
  "Легкий и воздушный с золотистой корочкой.",
  "Мягкие и идеально подходят для домашних бургеров.",
  "Тонкий и нежный для закусок или шашлыка.",
  "Полезный выбор для завтраков.",
  "С добавлением томатного соуса и сыра.",
  "С нежной начинкой внутри.",
  "Легкий перекус к чаю.",
  "Нежные и сладкие."
];

const pricesBread = [
  300,   350, 
  500,   700,   450, 
  400,   1200,   600,   500,   600
];

const weightsBread = [
  "400 г", "400 г", "300 г", 
  "6 шт",   "500 г",   "400 г", 
  "400 г",  "3 шт", 
  "300 г",   "2 шт"
];

const namesDrinks = [
  "Минеральная вода “Боржоми”", 
  "Апельсиновый сок", 
  "Черный чай", 
  "Зеленый чай с жасмином", 
  "Кофе молотый “Arabica”", 
  "Лимонад “Дюшес”", 
  "Молочный коктейль “Клубника”", 
  "Компот из сухофруктов", 
  "Газировка “Кола”", 
  "Энергетик “RedBull”", 
  "Вишневый сок", 
  "Квас “Традиционный”", 
  "Томатный сок", 
  "Мятный чай", 
  "Фруктовый чай “Ягоды”", 
  "Смузи “Манго и банан”", 
  "Холодный чай “Персик”", 
  "Шоколадный молочный напиток", 
  "Кофе 3-в-1 “Капучино”", 
  "Фильтрованная вода"
];

const descriptionsDrinks = [
  "Газированная вода с насыщенным минералами составом.",
  "Натуральный сок без сахара, богат витамином С.",
  "Классический вкус для повседневного чаепития.",
  "Ароматный чай с нежным цветочным послевкусием.",
  "Настоящий выбор для любителей насыщенного вкуса.",
  "Освежающий напиток с грушевым вкусом.",
  "Нежный вкус и приятная текстура.",
  "Натуральный напиток без сахара.",
  "Популярный газированный напиток для любой компании.",
  "Для активных и энергичных людей.",
  "Натуральный сок с ярким вкусом вишни.",
  "Легкий и освежающий напиток с кислинкой.",
  "Полезный сок, богатый витаминами.",
  "Успокаивающий и освежающий напиток.",
  "Сладкий и насыщенный аромат ягод.",
  "Здоровый напиток для перекуса.",
  "Легкий освежающий напиток.",
  "Для сладкоежек.",
  "Быстрое решение для любителей кофе.",
  "Чистая и безопасная для питья вода."
];

const pricesDrinks = [
  350, 700, 1200, 900, 2200, 450, 800, 600, 500, 750, 
  700, 500, 600, 450, 850, 900, 650, 450, 1000, 350
];

const weightsDrinks = [
  "0.5 л", "1 л", "100 пакетиков", "100 г", "250 г", 
  "1.5 л", "0.5 л", "1 л", "1.5 л", "250 мл", 
  "1 л", "1.5 л", "1 л", "20 пакетиков", "100 г", 
  "300 мл", "1.5 л", "200 мл", "10 шт", "5 л"
];

const namesFruitsAndVeggies = [
  "Помидоры", 
  "Огурцы", 
  "Картофель", 
  "Морковь", 
  "Лук репчатый", 
  "Чеснок", 
  "Яблоки “Голден”", 
  "Бананы", 
  "Апельсины", 
  "Мандарины", 
  "Капуста белокочанная", 
  "Брокколи", 
  "Цветная капуста", 
  "Виноград", 
  "Перец болгарский", 
  "Киви", 
  "Груши", 
  "Лимоны", 
  "Зелень (укроп, петрушка)", 
  "Кабачки"
];

const descriptionsFruitsAndVeggies = [
  "Сочные и свежие для салатов и блюд.",
  "Хрустящие и ароматные для закусок.",
  "Универсальный продукт для гарниров.",
  "Сладкая и сочная, богата витаминами.",
  "Основной ингредиент для многих блюд.",
  "Ароматный и острый.",
  "Сладкие и хрустящие.",
  "Идеальный перекус и источник энергии.",
  "Богаты витамином С.",
  "Сладкие и сочные, идеально для зимнего сезона.",
  "Для салатов и супов.",
  "Полезный выбор для гарнира.",
  "Нежная на вкус.",
  "Сладкий и сочный для десертов.",
  "Яркий и ароматный.",
  "Экзотический вкус и множество витаминов.",
  "Сладкие и мягкие.",
  "Освежающий и кисловатый вкус.",
  "Свежая добавка к блюдам.",
  "Идеально для жарки и запекания."
];

const pricesFruitsAndVeggies = [
  800, 700, 350, 400, 300, 400, 600, 800, 900, 1000, 
  300, 1200, 1000, 1300, 1200, 1500, 900, 800, 150, 600
];

const weightsFruitsAndVeggies = [
  "1 кг", "1 кг", "1 кг", "1 кг", "1 кг", "200 г", "1 кг", "1 кг", 
  "1 кг", "1 кг", "1 кг", "1 кг", "1 кг", "1 кг", "1 кг", "1 кг", 
  "1 кг", "1 кг", "100 г", "1 кг"
];

const namesDairy = [
  "Молоко пастеризованное", 
  "Сливочное масло", 
  "Сыр “Гауда”", 
  "Йогурт “Клубника”", 
  "Сметана", 
  "Творог", 
  "Кефир", 
  "Сыр “Моцарелла”", 
  "Ряженка", 
  "Сыр “Чеддер”"
];

const descriptionsDairy = [
  "Натуральное молоко для ежедневного употребления.",
  "Для выпечки и бутербродов.",
  "Полутвердый сыр с нежным вкусом.",
  "Нежный и сладкий.",
  "Универсальный продукт для соусов и супов.",
  "Богатый белком и кальцием.",
  "Для здоровья и легкости.",
  "Идеален для пиццы и салатов.",
  "Легкий напиток с приятным вкусом.",
  "Для сэндвичей и супов."
];

const pricesDairy = [
  350, 1200, 1500, 400, 350, 800, 400, 1700, 400, 1800
];

const weightsDairy = [
  "1 л", "200 г", "250 г", "200 г", "200 г", "500 г", "1 л", "250 г", "500 мл", "250 г"
];

const namesSnacks = [
  "Шоколад молочный “Alpen Gold”", 
  "Печенье “Орео”", 
  "Карамельные конфеты “Барбарис”", 
  "Чипсы “Lay’s”, сыр", 
  "Вафли “Артек”", 
  "Шоколад “Milka”, молочный с орехами", 
  "Сухарики со вкусом бекона", 
  "Конфеты “Рафаэлло”", 
  "Жевательные конфеты “Haribo”", 
  "Шоколадный батончик “Mars”", 
  "Попкорн “Карамельный”", 
  "Мармелад “Фрукты в сахаре”", 
  "Пастила “Яблочная”", 
  "Чипсы кукурузные “Doritos”", 
  "Пирожное “Твикс”", 
  "Шоколадный крем “Nutella”", 
  "Соленые орешки “Фисташки”", 
  "Крекеры “Tuc”", 
  "Кекс “Мраморный”", 
  "Чипсы овощные “BeHealthy”"
];

const descriptionsSnacks = [
  "Классический молочный шоколад с нежным вкусом.",
  "Хрустящие печенья с кремовой начинкой.",
  "Леденцы с легкой кислинкой.",
  "Хрустящие картофельные чипсы со вкусом сыра.",
  "Сладкие вафли с нежной начинкой.",
  "Кремовый шоколад с кусочками фундука.",
  "Хрустящий перекус с насыщенным вкусом.",
  "Кокосовые конфеты с нежной начинкой.",
  "Яркие мармеладные мишки для всей семьи.",
  "Классический шоколадный перекус.",
  "Идеальный выбор для просмотра фильма.",
  "Нежный мармелад с фруктовым вкусом.",
  "Легкая и натуральная сладость.",
  "Хрустящие снеки с пикантным вкусом.",
  "Сладкое лакомство с карамелью и шоколадом.",
  "Идеально подходит для тостов и выпечки.",
  "Питательный перекус с насыщенным вкусом.",
  "Легкие и хрустящие закуски.",
  "Домашний десерт с шоколадным рисунком.",
  "Здоровая альтернатива обычным чипсам."
];

const pricesSnacks = [
  550, 800, 600, 850, 500, 850, 300, 2200, 800, 350, 400, 750, 600, 900, 400, 2200, 1800, 600, 1000, 1200
];

const weightsSnacks = [
  "90 г", "154 г", "250 г", "150 г", "200 г", "100 г", "100 г", "150 г", "200 г", "50 г", "100 г", "300 г", "150 г", "150 г", "50 г", "350 г", "200 г", "150 г", "300 г", "100 г"
];




function App() {
  let test1 = 'mogus'
  let price1 = 6400
  let weight1 = '12g'
  let description1 = 'tasty'

  const AssemblyMeat = () => (
    
    <div>
      {namesMeat.map((name, index) => (
        <MenuItem
          
          img={'/Img/image1.png'}
          name={name}
          description={descriptionsMeat[index]}
          price={pricesMeat[index]}
          weight={weightsMeat[index]}
        />
      ))}
    </div>

  );

const AssemblyBread = () => (
  <div>
    {nameBread.map((name, index) => (

       <MenuItem
       img={'/Img/image1.png'}
       name={name}
       description={descriptionsBread[index]}
       price={pricesBread[index]}
       weight={weightsBread[index]}
     />

    ))}
  </div>
  );

  const AssemblyDrinks = () => (
    <div>
      {namesDrinks.map((name, index) => (
  
         <MenuItem
         img={'/Img/image1.png'}
         name={name}
         description={descriptionsDrinks[index]}
         price={pricesDrinks[index]}
         weight={weightsDrinks[index]}
       />
  
      ))}
    </div>
    );
  
    const AssemblyFruitsnvegies = () => (
      <div>
        {namesFruitsAndVeggies.map((name, index) => (
    
           <MenuItem
           img={'/Img/image1.png'}
           name={name}
           description={descriptionsFruitsAndVeggies[index]}
           price={pricesFruitsAndVeggies[index]}
           weight={weightsFruitsAndVeggies[index]}
         />
    
        ))}
      </div>
      );

  const AssemblyMilk = () => (
  <div>
    {namesDairy.map((name, index) => (

       <MenuItem
       img={'/Img/image1.png'}
       name={name}
       description={descriptionsDairy[index]}
       price={pricesDairy[index]}
       weight={weightsDairy[index]}
     />

    ))}
  </div>
  );

  const AssemblySnacks = () => (
    <div>
      {namesSnacks.map((name, index) => (
  
         <MenuItem
         img={'/Img/image1.png'}
         name={name}
         description={descriptionsSnacks[index]}
         price={pricesSnacks[index]}
         weight={weightsSnacks[index]}
       />
  
      ))}
    </div>
    );



  return (
    <div className="App">

      
      <BrowserRouter>
      <Header/>
         <Routes>


          <Route path="/meat" element={<AssemblyMeat/>}/>
          <Route path="/bread" element={<AssemblyBread/>}/>
          <Route path="/drinks" element={<AssemblyDrinks/>}/>
          <Route path="/fruitsnvegies" element={<AssemblyFruitsnvegies/>}/>
          <Route path="/milk" element={<AssemblyMilk/>}/>
          <Route path="/snacks" element={<AssemblySnacks/>}/>


          </Routes>


        </BrowserRouter>
    </div>
  );
}

export default App;
